The following query returns a historical version of the table from one hour ago.



SELECT *
FROM t
  FOR SYSTEM_TIME AS OF TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 HOUR);
The following query returns a historical version of the table at an absolute point in time.



SELECT *
FROM t
  FOR SYSTEM_TIME AS OF '2017-01-01 10:00:00-07:00';
The following query returns an error because the timestamp_expression contains a correlated reference to a column in the containing query.



SELECT *
FROM t1
WHERE t1.a IN (SELECT t2.a
               FROM t2 FOR SYSTEM_TIME AS OF t1.timestamp_column);
The following operations show accessing a historical version of the table before tabl


    SELECT
      *
    FROM `bigquery-public-data`.`thelook_ecommerce`.`order_items` FOR SYSTEM_TIME AS OF TIMESTAMP('2024-04-08T13:27:50.328227+00:00')


    WITH t0 AS (
  SELECT
    t4.`id`,
    t4.`order_id`,
    t4.`user_id`,
    t4.`product_id`,
    t4.`inventory_item_id`,
    t4.`status`,
    t4.`created_at`,
    t4.`shipped_at`,
    t4.`delivered_at`,
    t4.`returned_at`,
    t4.`sale_price`,
    farm_fingerprint(
      CONCAT(
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`id` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`order_id` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`user_id` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`product_id` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`inventory_item_id` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(t4.`status`, ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`created_at` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`shipped_at` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`delivered_at` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`returned_at` AS STRING), ''), '\\', '\\\\')),
        CONCAT('\\', REPLACE(coalesce(CAST(t4.`sale_price` AS STRING), ''), '\\', '\\\\'))
      )
    ) AS `bigframes_ordering_1`,
    RAND() AS `bigframes_ordering_2`
  FROM (
    SELECT
      *
    FROM `bigquery-public-data`.`thelook_ecommerce`.`order_items` FOR SYSTEM_TIME AS OF TIMESTAMP('2024-04-08T13:27:50.328227+00:00')
  ) AS t4
), t1 AS (
  SELECT
    t0.`id`,
    t0.`order_id`,
    t0.`user_id`,
    t0.`product_id`,
    t0.`inventory_item_id`,
    t0.`status`,
    t0.`created_at`,
    t0.`shipped_at`,
    t0.`delivered_at`,
    t0.`returned_at`,
    t0.`sale_price`,
    (
      row_number() OVER (ORDER BY t0.`bigframes_ordering_1` IS NULL ASC, t0.`bigframes_ordering_1` ASC, t0.`bigframes_ordering_2` IS NULL ASC, t0.`bigframes_ordering_2` ASC) - 1
    ) AS `bigframes_ordering_id`
  FROM t0
), t2 AS (
  SELECT
    t1.`id`,
    t1.`order_id`,
    t1.`user_id`,
    t1.`product_id`,
    t1.`inventory_item_id`,
    t1.`status`,
    t1.`created_at`,
    t1.`shipped_at`,
    t1.`delivered_at`,
    t1.`returned_at`,
    t1.`sale_price`,
    t1.`bigframes_ordering_id`
  FROM t1
)
SELECT
  t3.`col_3`,
  t3.`id`,
  t3.`order_id`,
  t3.`user_id`,
  t3.`product_id`,
  t3.`inventory_item_id`,
  t3.`status`,
  t3.`created_at`,
  t3.`shipped_at`,
  t3.`delivered_at`,
  t3.`returned_at`,
  t3.`sale_price`,
  t3.`bigframes_ordering_id`
FROM (
  SELECT
    t2.`bigframes_ordering_id` AS `col_3`,
    t2.`id`,
    t2.`order_id`,
    t2.`user_id`,
    t2.`product_id`,
    t2.`inventory_item_id`,
    t2.`status`,
    t2.`created_at`,
    t2.`shipped_at`,
    t2.`delivered_at`,
    t2.`returned_at`,
    t2.`sale_price`,
    t2.`bigframes_ordering_id`
  FROM t2
) AS t3